{"ast":null,"code":"import _objectSpread from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_TWILIO_USER_START, GET_TWILIO_USER_SUCCESS, GET_TWILIO_USER_ERROR, FETCH_TWILIO_MESSAGES, FETCH_TWILIO_MESSAGES_ERROR, GET_TWILIO_CHANNEL, GET_TWILIO_CHANNEL_ERROR, FETCH_TWILIO_MESSAGES_START, FETCH_TWILIO_MESSAGES_SUCCESS } from \"../actions/types\";\nvar initialState = {\n  twilioUser: [],\n  error: {},\n  errorLoadingUser: null,\n  loadingUser: false,\n  loadingMessages: false,\n  messages: [],\n  currentChannel: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_TWILIO_USER_START:\n      return _objectSpread({}, state, {\n        loadingUser: true\n      });\n\n    case GET_TWILIO_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        twilioUser: payload,\n        loadingUser: false\n      });\n\n    case GET_TWILIO_USER_ERROR:\n      return _objectSpread({}, state, {\n        errorLoadingUser: payload,\n        loadingUser: false\n      });\n\n    case GET_TWILIO_CHANNEL:\n      return _objectSpread({}, state, {\n        currentChannel: payload,\n        loading: false\n      });\n\n    case GET_TWILIO_CHANNEL_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case FETCH_TWILIO_MESSAGES_START:\n      return _objectSpread({}, state, {\n        loadingMessages: true\n      });\n\n    case FETCH_TWILIO_MESSAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        messages: payload,\n        loadingMessages: false\n      });\n\n    case FETCH_TWILIO_MESSAGES_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loadingMessages: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/macbook/react-message-app/src/redux/reducers/twilio.js"],"names":["GET_TWILIO_USER_START","GET_TWILIO_USER_SUCCESS","GET_TWILIO_USER_ERROR","FETCH_TWILIO_MESSAGES","FETCH_TWILIO_MESSAGES_ERROR","GET_TWILIO_CHANNEL","GET_TWILIO_CHANNEL_ERROR","FETCH_TWILIO_MESSAGES_START","FETCH_TWILIO_MESSAGES_SUCCESS","initialState","twilioUser","error","errorLoadingUser","loadingUser","loadingMessages","messages","currentChannel","state","action","type","payload","loading"],"mappings":";AAAA,SACEA,qBADF,EAEEC,uBAFF,EAGEC,qBAHF,EAIEC,qBAJF,EAKEC,2BALF,EAMEC,kBANF,EAOEC,wBAPF,EAQEC,2BARF,EASEC,6BATF,QAUO,kBAVP;AAYA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,gBAAgB,EAAE,IAHC;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,eAAe,EAAE,KALE;AAMnBC,EAAAA,QAAQ,EAAE,EANS;AAOnBC,EAAAA,cAAc,EAAE;AAPG,CAArB;AAUA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;AAAA,MAC5CC,IAD4C,GAC1BD,MAD0B,CAC5CC,IAD4C;AAAA,MACtCC,OADsC,GAC1BF,MAD0B,CACtCE,OADsC;;AAEpD,UAAQD,IAAR;AACE,SAAKnB,qBAAL;AACE,+BACKiB,KADL;AAEEJ,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKZ,uBAAL;AACE,+BACKgB,KADL;AAEEP,QAAAA,UAAU,EAAEU,OAFd;AAGEP,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAKX,qBAAL;AACE,+BACKe,KADL;AAEEL,QAAAA,gBAAgB,EAAEQ,OAFpB;AAGEP,QAAAA,WAAW,EAAE;AAHf;;AAMF,SAAKR,kBAAL;AACE,+BACKY,KADL;AAEED,QAAAA,cAAc,EAAEI,OAFlB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKf,wBAAL;AACE,+BACKW,KADL;AAEEN,QAAAA,KAAK,EAAES,OAFT;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKd,2BAAL;AACE,+BACKU,KADL;AAEEH,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAKN,6BAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,QAAQ,EAAEK,OAFZ;AAGEN,QAAAA,eAAe,EAAE;AAHnB;;AAKF,SAAKV,2BAAL;AACE,+BACKa,KADL;AAEEN,QAAAA,KAAK,EAAES,OAFT;AAGEN,QAAAA,eAAe,EAAE;AAHnB;;AAKF;AACE,aAAOG,KAAP;AAlDJ;AAoDD","sourcesContent":["import {\r\n  GET_TWILIO_USER_START,\r\n  GET_TWILIO_USER_SUCCESS,\r\n  GET_TWILIO_USER_ERROR,\r\n  FETCH_TWILIO_MESSAGES,\r\n  FETCH_TWILIO_MESSAGES_ERROR,\r\n  GET_TWILIO_CHANNEL,\r\n  GET_TWILIO_CHANNEL_ERROR,\r\n  FETCH_TWILIO_MESSAGES_START,\r\n  FETCH_TWILIO_MESSAGES_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  twilioUser: [],\r\n  error: {},\r\n  errorLoadingUser: null,\r\n  loadingUser: false,\r\n  loadingMessages: false,\r\n  messages: [],\r\n  currentChannel: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_TWILIO_USER_START:\r\n      return {\r\n        ...state,\r\n        loadingUser: true,\r\n      };\r\n    case GET_TWILIO_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        twilioUser: payload,\r\n        loadingUser: false,\r\n      };\r\n    case GET_TWILIO_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        errorLoadingUser: payload,\r\n        loadingUser: false,\r\n      };\r\n\r\n    case GET_TWILIO_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_TWILIO_CHANNEL_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_TWILIO_MESSAGES_START:\r\n      return {\r\n        ...state,\r\n        loadingMessages: true,\r\n      };\r\n    case FETCH_TWILIO_MESSAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        messages: payload,\r\n        loadingMessages: false,\r\n      };\r\n    case FETCH_TWILIO_MESSAGES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loadingMessages: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}