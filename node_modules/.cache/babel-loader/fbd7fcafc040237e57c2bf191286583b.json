{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/macbook/react-message-app/src/components/CommentList/index.js\";\nimport { message, Typography } from \"antd\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { useSelector } from \"react-redux\";\nimport reqwest from \"reqwest\";\nimport com from \"../../utils\";\nimport Toolbar from \"../Toolbar\";\nimport CommentItem from \"./CommentItem\";\nimport \"./commentList.scss\";\nvar Text = Typography.Text;\nvar fakeDataUrl = \"https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo\";\nexport default function CommentList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hasMore = _useState6[0],\n      setHasMore = _useState6[1];\n\n  var currentPost = useSelector(function (state) {\n    return state.profile.currentPost;\n  });\n  useEffect(function () {\n    if (currentPost) {\n      console.log(currentPost);\n      Axios.get(\"\".concat(com.root, \"/api/v1/fetchAllCommentByPost/\").concat(currentPost.id)).then(function (res) {\n        console.log(res.data.data.comment.data);\n        setData(res.data.data.comment.data);\n      });\n    }\n  }, [currentPost]);\n\n  var fetchData = function fetchData(callback) {\n    reqwest({\n      url: fakeDataUrl,\n      type: \"json\",\n      method: \"get\",\n      contentType: \"application/json\",\n      success: function success(res) {\n        callback(res);\n      }\n    });\n  };\n\n  var handleInfiniteOnLoad = function handleInfiniteOnLoad() {\n    setLoading(true);\n\n    if (data.length > 14) {\n      message.warning(\"Infinite List loaded all\");\n      setHasMore(false);\n      setLoading(false);\n      return;\n    }\n\n    fetchData(function (res) {\n      data = (_readOnlyError(\"data\"), data.concat(res.results));\n      setData(data);\n      setLoading(false);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"message-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    title: \"Comments\",\n    leftItems: [// ,\n      // <ToolbarButton\n      //   key=\"info\"\n      //   icon=\"ion-ios-information-circle-outline\"\n      // />,\n      // <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n      // <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n      // <MessageOutlined className=\"cursor-pointer\" />,\n      // <UserAddOutlined className=\"cursor-pointer\" />,\n    ],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"demo-infinite-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    initialLoad: false,\n    pageStart: 0,\n    loadMore: handleInfiniteOnLoad,\n    hasMore: !loading && hasMore,\n    useWindow: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, currentPost && React.createElement(CommentItem, {\n    comments: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/macbook/react-message-app/src/components/CommentList/index.js"],"names":["message","Typography","Axios","React","useEffect","useState","InfiniteScroll","useSelector","reqwest","com","Toolbar","CommentItem","Text","fakeDataUrl","CommentList","props","data","setData","loading","setLoading","hasMore","setHasMore","currentPost","state","profile","console","log","get","root","id","then","res","comment","fetchData","callback","url","type","method","contentType","success","handleInfiniteOnLoad","length","warning","concat","results"],"mappings":"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","sourcesContent":["import { message, Typography } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { useSelector } from \"react-redux\";\r\nimport reqwest from \"reqwest\";\r\nimport com from \"../../utils\";\r\nimport Toolbar from \"../Toolbar\";\r\nimport CommentItem from \"./CommentItem\";\r\nimport \"./commentList.scss\";\r\nconst { Text } = Typography;\r\nconst fakeDataUrl =\r\n  \"https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo\";\r\n\r\nexport default function CommentList(props) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const currentPost = useSelector((state) => state.profile.currentPost);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (currentPost) {\r\n        console.log(currentPost);\r\n        Axios.get(\r\n          `${com.root}/api/v1/fetchAllCommentByPost/${currentPost.id}`\r\n        ).then((res) => {\r\n          console.log(res.data.data.comment.data);\r\n          setData(res.data.data.comment.data);\r\n        });\r\n      }\r\n    },\r\n    [currentPost]\r\n  );\r\n  const fetchData = (callback) => {\r\n    reqwest({\r\n      url: fakeDataUrl,\r\n      type: \"json\",\r\n      method: \"get\",\r\n      contentType: \"application/json\",\r\n      success: (res) => {\r\n        callback(res);\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInfiniteOnLoad = () => {\r\n    setLoading(true);\r\n    if (data.length > 14) {\r\n      message.warning(\"Infinite List loaded all\");\r\n      setHasMore(false);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    fetchData((res) => {\r\n      data = data.concat(res.results);\r\n      setData(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-list\">\r\n      <Toolbar\r\n        title=\"Comments\"\r\n        leftItems={\r\n          [\r\n            // ,\r\n            // <ToolbarButton\r\n            //   key=\"info\"\r\n            //   icon=\"ion-ios-information-circle-outline\"\r\n            // />,\r\n            // <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\r\n            // <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n            // <MessageOutlined className=\"cursor-pointer\" />,\r\n            // <UserAddOutlined className=\"cursor-pointer\" />,\r\n          ]\r\n        }\r\n      />\r\n\r\n      <div className=\"demo-infinite-container\">\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={handleInfiniteOnLoad}\r\n          hasMore={!loading && hasMore}\r\n          useWindow={false}\r\n        >\r\n          {currentPost && <CommentItem comments={data} />}\r\n\r\n          {/* <List\r\n            dataSource={data}\r\n            renderItem={(item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src=\"logo_user.jpg\" />}\r\n                  title={<a href=\"https://ant.design\">Test User</a>}\r\n                  description={moment(item.created_time).format(\r\n                    \"DD-MM-YY, HH:mm\"\r\n                  )}\r\n                />\r\n                <div>{item.message}</div>\r\n              </List.Item>\r\n            )}\r\n          >\r\n            {loading && hasMore && (\r\n              <div className=\"demo-loading-container\">\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List> */}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}