{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GET_TWILIO_USER_START, GET_TWILIO_USER_ERROR, GET_TWILIO_CHANNEL, GET_TWILIO_CHANNEL_ERROR, FETCH_TWILIO_MESSAGES, FETCH_TWILIO_MESSAGES_ERROR, GET_TWILIO_USER_SUCCESS, FETCH_TWILIO_MESSAGES_START, FETCH_TWILIO_MESSAGES_SUCCESS } from \"./types\";\nimport com from \"../../utils\";\nimport Axios from \"axios\";\n\nvar Chat = require(\"twilio-chat\");\n\nexport var getTwilioUser = function getTwilioUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //   console.log(\"fetch conversation actions\");\n                dispatch({\n                  type: GET_TWILIO_USER_START\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return Axios.get(\"\".concat(com.root, \"/api/v1/twilio:generateJwt?email=voduykhanhnc@gmail.com\"));\n\n              case 4:\n                res = _context.sent;\n                _context.next = 7;\n                return Chat.Client.create(res.data.data);\n\n              case 7:\n                user = _context.sent;\n                dispatch({\n                  type: GET_TWILIO_USER_SUCCESS,\n                  payload: user\n                });\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch({\n                  type: GET_TWILIO_USER_ERROR,\n                  payload: _context.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const selectTwilioChannel = (channelName) => async (dispatch) => {\n//   dispatch({\n//     type: SELECT_TWILIO_CHANNEL,\n//     payload: channelName,\n//   });\n// };\n\nexport var getTwilioChannel = function getTwilioChannel(user, channelName) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var channel;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return user.getChannelBySid(channelName);\n\n              case 3:\n                channel = _context2.sent;\n                dispatch({\n                  type: GET_TWILIO_CHANNEL,\n                  payload: channel\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: GET_TWILIO_CHANNEL_ERROR,\n                  payload: _context2.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchTwilioMessages = function fetchTwilioMessages(channel) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var messages;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch({\n                  type: FETCH_TWILIO_MESSAGES_START\n                });\n                _context3.prev = 1;\n                _context3.next = 4;\n                return channel.getMessages(40);\n\n              case 4:\n                messages = _context3.sent;\n                dispatch({\n                  type: FETCH_TWILIO_MESSAGES_SUCCESS,\n                  payload: messages\n                });\n                _context3.next = 12;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.error(_context3.t0);\n                dispatch({\n                  type: FETCH_TWILIO_MESSAGES_ERROR,\n                  payload: _context3.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/macbook/react-message-app/src/redux/actions/twilio.js"],"names":["GET_TWILIO_USER_START","GET_TWILIO_USER_ERROR","GET_TWILIO_CHANNEL","GET_TWILIO_CHANNEL_ERROR","FETCH_TWILIO_MESSAGES","FETCH_TWILIO_MESSAGES_ERROR","GET_TWILIO_USER_SUCCESS","FETCH_TWILIO_MESSAGES_START","FETCH_TWILIO_MESSAGES_SUCCESS","com","Axios","Chat","require","getTwilioUser","dispatch","type","get","root","res","Client","create","data","user","payload","getTwilioChannel","channelName","getChannelBySid","channel","fetchTwilioMessages","getMessages","messages","console","error"],"mappings":"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","sourcesContent":["import {\r\n  GET_TWILIO_USER_START,\r\n  GET_TWILIO_USER_ERROR,\r\n  GET_TWILIO_CHANNEL,\r\n  GET_TWILIO_CHANNEL_ERROR,\r\n  FETCH_TWILIO_MESSAGES,\r\n  FETCH_TWILIO_MESSAGES_ERROR,\r\n  GET_TWILIO_USER_SUCCESS,\r\n  FETCH_TWILIO_MESSAGES_START,\r\n  FETCH_TWILIO_MESSAGES_SUCCESS,\r\n} from \"./types\";\r\nimport com from \"../../utils\";\r\nimport Axios from \"axios\";\r\nconst Chat = require(\"twilio-chat\");\r\n\r\nexport const getTwilioUser = () => async (dispatch) => {\r\n  //   console.log(\"fetch conversation actions\");\r\n  dispatch({\r\n    type: GET_TWILIO_USER_START,\r\n  });\r\n  try {\r\n    const res = await Axios.get(\r\n      `${com.root}/api/v1/twilio:generateJwt?email=voduykhanhnc@gmail.com`\r\n    );\r\n\r\n    const user = await Chat.Client.create(res.data.data);\r\n\r\n    dispatch({\r\n      type: GET_TWILIO_USER_SUCCESS,\r\n      payload: user,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TWILIO_USER_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n// export const selectTwilioChannel = (channelName) => async (dispatch) => {\r\n//   dispatch({\r\n//     type: SELECT_TWILIO_CHANNEL,\r\n//     payload: channelName,\r\n//   });\r\n// };\r\n\r\nexport const getTwilioChannel = (user, channelName) => async (dispatch) => {\r\n  try {\r\n    const channel = await user.getChannelBySid(channelName);\r\n\r\n    dispatch({\r\n      type: GET_TWILIO_CHANNEL,\r\n      payload: channel,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_TWILIO_CHANNEL_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchTwilioMessages = (channel) => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_TWILIO_MESSAGES_START,\r\n  });\r\n  try {\r\n    const messages = await channel.getMessages(40);\r\n    dispatch({\r\n      type: FETCH_TWILIO_MESSAGES_SUCCESS,\r\n      payload: messages,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    dispatch({\r\n      type: FETCH_TWILIO_MESSAGES_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}