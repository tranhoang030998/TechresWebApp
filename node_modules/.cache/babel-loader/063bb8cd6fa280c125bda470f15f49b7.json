{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withConfigConsumer = withConfigConsumer;\nexports.ConfigConsumer = exports.ConfigContext = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _renderEmpty = _interopRequireDefault(require(\"./renderEmpty\"));\n\nvar ConfigContext =\n/*#__PURE__*/\nReact.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) return customizePrefixCls;\n    return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n  },\n  renderEmpty: _renderEmpty[\"default\"]\n});\nexports.ConfigContext = ConfigContext;\nvar ConfigConsumer = ConfigContext.Consumer;\nexports.ConfigConsumer = ConfigConsumer;\n\nfunction withConfigConsumer(config) {\n  return function withConfigConsumerFunc(Component) {\n    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n    var SFC = function SFC(props) {\n      return (\n        /*#__PURE__*/\n        React.createElement(ConfigConsumer, null, function (configProps) {\n          var basicPrefixCls = config.prefixCls;\n          var getPrefixCls = configProps.getPrefixCls;\n          var customizePrefixCls = props.prefixCls;\n          var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n          return (\n            /*#__PURE__*/\n            React.createElement(Component, (0, _extends2[\"default\"])({}, configProps, props, {\n              prefixCls: prefixCls\n            }))\n          );\n        })\n      );\n    };\n\n    var cons = Component.constructor;\n    var name = cons && cons.displayName || Component.name || 'Component';\n    SFC.displayName = \"withConfigConsumer(\".concat(name, \")\");\n    return SFC;\n  };\n}","map":null,"metadata":{},"sourceType":"script"}