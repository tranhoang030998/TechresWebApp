{"ast":null,"code":"import _objectSpread from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbook/react-message-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\"; // import { setAlert } from \"./alert\";\n\nimport com from \"../../utils\";\nimport Axios from \"axios\";\nexport var loadUser = function loadUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (localStorage.token) {\n                  com.setAuthToken(localStorage.token);\n                } // try {\n                // const res = await axios.get(\"/api/auth\");\n\n\n                if (localStorage.token) {\n                  dispatch({\n                    type: USER_LOADED,\n                    payload: {\n                      name: \"Trung\",\n                      age: 25\n                    }\n                  });\n                } // }\n                // } catch (err) {\n                else {\n                    dispatch({\n                      type: AUTH_ERROR\n                    });\n                  } // }\n\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var login = function login(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res, errors;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(email, password);\n                _context2.prev = 1;\n                _context2.next = 4;\n                return Axios.post(\"\".concat(com.root, \"/api/v1/staff:login\"), {\n                  email: email,\n                  password: password\n                });\n\n              case 4:\n                res = _context2.sent;\n                console.log(res);\n\n                if (res.data.meta.errorCode === 200) {\n                  dispatch({\n                    type: LOGIN_SUCCESS,\n                    payload: _objectSpread({}, res.data, {\n                      token: \"fake-token\"\n                    })\n                  });\n                } else {\n                  console.log(\"testset\");\n                  window.alert(\"Invalid email and password, please try again!  \");\n                  dispatch({\n                    type: LOGIN_FAIL,\n                    payload: res.meta.errorMessage\n                  });\n                }\n\n                dispatch(loadUser());\n                _context2.next = 15;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](1);\n                errors = _context2.t0;\n\n                if (errors) {//   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n                }\n\n                dispatch({\n                  type: LOGIN_FAIL,\n                  payload: _context2.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var register = function register(_ref3) {\n  var name = _ref3.name,\n      email = _ref3.email,\n      password = _ref3.password;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var config, body, res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                config = {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }; // const body = JSON.stringify({ name, email, password });\n\n                body = {\n                  displayName: name,\n                  email: email,\n                  password: password,\n                  nationality: \"Vietnam\"\n                };\n                _context3.prev = 2;\n                _context3.next = 5;\n                return axios.post(\"\".concat(com.root, \"/api/v1/staff:register\"), body, config);\n\n              case 5:\n                res = _context3.sent;\n                dispatch(login(email, password));\n                dispatch(loadUser());\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n                // const errors = err.response.data.errors;\n                // if (errors) {\n                // errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n                // }\n                // dispatch({\n                //   type: REGISTER_FAIL,\n                // });\n                console.error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; // Logout / Clear Profile\n\nexport var logout = function logout() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n};","map":{"version":3,"sources":["/Users/macbook/react-message-app/src/redux/actions/auth.js"],"names":["axios","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","com","Axios","loadUser","dispatch","localStorage","token","setAuthToken","type","payload","name","age","login","email","password","console","log","post","root","res","data","meta","errorCode","window","alert","errorMessage","errors","register","config","headers","body","displayName","nationality","error","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n// import { setAlert } from \"./alert\";\r\nimport com from \"../../utils\";\r\nimport Axios from \"axios\";\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    com.setAuthToken(localStorage.token);\r\n  }\r\n\r\n  // try {\r\n  // const res = await axios.get(\"/api/auth\");\r\n  if (localStorage.token) {\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: { name: \"Trung\", age: 25 },\r\n    });\r\n  }\r\n  // }\r\n  // } catch (err) {\r\n  else {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n  // }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  console.log(email, password);\r\n  try {\r\n    // const res = await axios.post(\"/api/auth\", body, config);\r\n    const res = await Axios.post(`${com.root}/api/v1/staff:login`, {\r\n      email,\r\n      password,\r\n    });\r\n    console.log(res);\r\n    if (res.data.meta.errorCode === 200) {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { ...res.data, token: \"fake-token\" },\r\n      });\r\n    } else {\r\n      console.log(\"testset\");\r\n      window.alert(\"Invalid email and password, please try again!  \");\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: res.meta.errorMessage,\r\n      });\r\n    }\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err;\r\n\r\n    if (errors) {\r\n      //   errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // const body = JSON.stringify({ name, email, password });\r\n  const body = { displayName: name, email, password, nationality: \"Vietnam\" };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${com.root}/api/v1/staff:register`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch(login(email, password));\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n\r\n    // if (errors) {\r\n    // errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    // }\r\n    // dispatch({\r\n    //   type: REGISTER_FAIL,\r\n    // });\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}